"""
    Copyright 2016 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import vm
import web

entity AWSConfig extends vm::IaaSConfig:
    """
        The configuration to access Amazon Web Services
    """
    string region
    string availability_zone
    string access_key
    string secret_key
end

implementation awsConfig for AWSConfig:
    iaas.iaas_config_string = std::template("aws/ec2_config.tmpl")
end

implement AWSConfig using awsConfig

entity LoadBalancer extends web::LoadBalancer:
    """
        A AWS loadbalancer
    """
    number dest_port=80
end

ELB elb [1] -- [1] LoadBalancer lb

implement LoadBalancer using awsLB

implementation awsLB for LoadBalancer:
    for lb_app in applications:
        elb_name = aws::elbid(lb_app.name.hostname)
        elb = ELB(name=elb_name, iaas=iaas, dest_port=dest_port)
        self.elb = elb
        for app in lb_app.app_instances:
            elb.instances = app.container.host
        end
    end
end

entity ELB:
    """
        An ELB load balancer

        :param purged The state of the loadbalancer
        :param purge_on_delete Purge the loadbalancer when it is no longer included in the configuration model.
    """
    string name
    string security_group="default"
    number listen_port=80
    number dest_port=80
    string protocol="http"
    bool   purged = false
    bool   purge_on_delete = true
end

implement ELB using std::none

vm::IaaS iaas [1] -- [0:] LoadBalancer loadbalancers

vm::IaaS iaas [1] -- [0:] ELB aws_elb
vm::Host instances [0:] -- [0:] ELB aws_elb

